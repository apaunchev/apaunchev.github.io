/*------------------------------------*\
	$MIXINS
\*------------------------------------*/
/**
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 */
@mixin font-size($font-size, $line-height: true) {
	font-size: $font-size;
	font-size: ($font-size / $base-font-size)*1rem;
	@if $line-height == true {
		line-height: ceil($font-size / $base-line-height) * ($base-line-height / $font-size);
	}
}


/**
 * Create vendor-prefixed CSS in one go, e.g.
 *
   `@include vendor(border-radius, 4px);`
 *
 */
@mixin vendor($property, $value...) {
	-webkit-#{$property}: $value;
	-moz-#{$property}: $value;
	-ms-#{$property}: $value;
	-o-#{$property}: $value;
	#{$property}: $value;
}


/**
 * Media query for targetting retina devices, e.g.:
 *
   .foo{
       background-image:url(1x.png);
       @include retina(){
           background-image:url(2x.png);
       }
   }
 *
 */
@mixin retina {
	@media print, (-webkit-min-device-pixel-ratio: 1.25), (-o-min-device-pixel-ratio: 5/4), (min-resolution: 120dpi) {
		@content;
	}
}


/**
 * Media query mixin.
 *
 * We define some broad breakpoints in our vars file that are picked up here
 * for use in a simple media query mixin. Our options are:
 *
 * palm
 * lap
 * lap-and-up
 * portable
 * desk
 * desk-wide
 *
 * Not using a media query will, naturally, serve styles to all devices.
 *
 * `@include media-query(palm){ [styles here] }`
 *
 * We work out your end points for you:
 */
$palm-end: $lap-start - 1px;
$lap-end:  $desk-start - 1px;

@mixin media-query($media-query) {
	@if $media-query == palm {
		@media only screen and (max-width: $palm-end) { @content; }
	}

	@if $media-query == lap {
		@media only screen and (min-width: $lap-start) and (max-width: $lap-end) { @content; }
	}

	@if $media-query == lap-and-up {
		@media only screen and (min-width: $lap-start) { @content; }
	}

	@if $media-query == portable {
		@media only screen and (max-width: $lap-end) { @content; }
	}

	@if $media-query == desk {
		@media only screen and (min-width: $desk-start) { @content; }
	}

	@if $media-query == desk-wide {
		@media only screen and (min-width: $desk-wide-start) { @content; }
	}
}
